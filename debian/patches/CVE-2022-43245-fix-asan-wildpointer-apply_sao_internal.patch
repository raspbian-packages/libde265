Description: SAO: fix illegal table access when input pixel is out of range
Origin: https://github.com/strukturag/libde265/commit/ad291690a8c92218b9e86738edd45ed64736b246
From ad291690a8c92218b9e86738edd45ed64736b246 Mon Sep 17 00:00:00 2001
From: Dirk Farin <dirk.farin@gmail.com>
Date: Tue, 24 Jan 2023 16:53:06 +0100
Subject: [PATCH] SAO: fix illegal table access when input pixel is out of
 range (fixes #351)

---
 libde265/sao.cc | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

--- a/libde265/sao.cc
+++ b/libde265/sao.cc
@@ -211,11 +211,21 @@
             continue;
           }
 
-          int bandIdx = bandTable[ in_img[xC+i+(yC+j)*in_stride]>>bandShift ];
-
           // Shifts are a strange thing. On x86, >>x actually computes >>(x%64).
           // So we have to take care of large bandShifts.
-          if (bandShift>=8) { bandIdx=0; }
+          int bandIdx;
+          if (bandShift >= 8) {
+            bandIdx = 0;
+          } else {
+            int pixel = in_img[xC+i+(yC+j)*in_stride];
+
+            // Note: the input pixel value should never exceed the valid range, but it seems that it still does,
+            // maybe when there was a decoding error and the pixels have not been filled in correctly.
+            // Thus, we have to limit the pixel range to ensure that we have no illegal table access.
+            pixel = Clip3(0,maxPixelValue, pixel);
+
+            bandIdx = bandTable[ pixel>>bandShift ];
+          }
 
           if (bandIdx>0) {
             int offset = saoinfo->saoOffsetVal[cIdx][bandIdx-1];
@@ -237,10 +247,13 @@
         for (int j=0;j<ctbH;j++)
           for (int i=0;i<ctbW;i++) {
 
-            int bandIdx = bandTable[ in_img[xC+i+(yC+j)*in_stride]>>bandShift ];
-
             // see above
-            if (bandShift>=8) { bandIdx=0; }
+            int bandIdx;
+            if (bandShift >= 8) {
+              bandIdx = 0;
+            } else {
+              bandIdx = bandTable[ in_img[xC+i+(yC+j)*in_stride]>>bandShift ];
+            }
 
             if (bandIdx>0) {
               int offset = saoinfo->saoOffsetVal[cIdx][bandIdx-1];
